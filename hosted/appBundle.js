(()=>{var e={603:e=>{e.exports={handleError:e=>{},sendPost:async(e,t,a)=>{const n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),r=await n.json();r.redirect&&(window.location=r.redirect),r.error&&r.error,a&&a(r)},hideError:()=>{}}}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,a),i.exports}(()=>{const e=a(603),t=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#ingredientName").value,n=t.target.querySelector("#ingredientCategory").value,r=t.target.querySelector("#ingredientQuantity").value,i=t.target.querySelector("#ingredientMeasurement").value,l=t.target.querySelector("#_csrf").value;return a&&n&&r?(e.sendPost(t.target.action,{name:a,category:n,quantity:r,measurement:i,_csrf:l},c),!1):(e.handleError("All fields are required!"),!1)},n=async t=>{t.preventDefault(),e.hideError(),await fetch(t.target.action),c()},r=e=>React.createElement("form",{id:"ingredientForm",name:"ingredientForm",onSubmit:t,action:"/maker",method:"POST",className:"ingredientForm"},React.createElement("label",{htmlFor:"name"},"Name: "),React.createElement("input",{id:"ingredientName",type:"text",name:"name",placeholder:"Ingredient Name"}),React.createElement("label",{htmlFor:"category"},"Category: "),React.createElement("select",{name:"ingredientCategory",id:"ingredientCategory",defaultValue:"miscellaneous"},React.createElement("option",{value:"canned goods"},"canned goods"),React.createElement("option",{value:"condiments"},"condiments"),React.createElement("option",{value:"produce"},"produce"),React.createElement("option",{value:"meats"},"meats"),React.createElement("option",{value:"dairy"},"dairy"),React.createElement("option",{value:"breakfast"},"breakfast"),React.createElement("option",{value:"pasta and rice"},"pasta and rice"),React.createElement("option",{value:"microwave"},"microwave"),React.createElement("option",{value:"beverages"},"beverages"),React.createElement("option",{value:"bakery"},"bakery"),React.createElement("option",{value:"oils"},"oils"),React.createElement("option",{value:"miscellaneous"},"miscellaneous")),React.createElement("label",{htmlFor:"quantity"},"Quantity: "),React.createElement("input",{id:"ingredientQuantity",type:"number",min:"0",name:"quantity"}),React.createElement("label",{htmlFor:"measurement"},"Measurement: "),React.createElement("select",{name:"ingredientMeasurement",id:"ingredientMeasurement"},React.createElement("option",{value:"cups"},"cups"),React.createElement("option",{value:"fl oz"},"fluid ounces"),React.createElement("option",{value:"grams"},"grams"),React.createElement("option",{value:"lbs"},"lbs"),React.createElement("option",{value:"units"},"units"),React.createElement("option",{value:"bunch"},"bunch")),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"makeIngredientSubmit",type:"submit",value:"Make Ingredient"})),i=e=>{if(0===e.ingredients.length)return React.createElement("div",{className:"ingredientList"},React.createElement("h3",{className:"emptyIngredient"},"No Ingredients yet!"));const t=e.ingredients.map((e=>React.createElement("div",{key:e._id,className:"ingredient"},React.createElement("h3",{className:"ingredientName"},"Name:",e.name),React.createElement("h3",{className:"ingredientCategory"},"Category:",e.category),React.createElement("h3",{className:"ingredientQuantity"},"Quantity:",e.quantity),React.createElement("h3",{className:"ingredientMeasurement"},"Measurement:",e.measurement))));return React.createElement("div",{className:"ingredientList"},React.createElement("form",{id:"ingredientClearer",name:"ingredientClearer",action:"/clearIngredients",onSubmit:n,method:"POST",className:"ingredientForm"},React.createElement("input",{className:"deleteIngredientSubmit",type:"submit",value:"Clear Ingredients"})),t)},c=async()=>{const e=await fetch("/getIngredients"),t=await e.json();ReactDOM.render(React.createElement(i,{ingredients:t.ingredients}),document.getElementById("ingredients"))};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json();ReactDOM.render(React.createElement(r,{csrf:t.csrfToken}),document.getElementById("makeIngredient")),ReactDOM.render(React.createElement(i,{ingredients:[]}),document.getElementById("ingredients")),c()}})()})();