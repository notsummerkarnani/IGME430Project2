(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").innerHTML=`<h3>${e}</h3>`,document.getElementById("errorMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,r,a)=>{const n=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),s=await n.json();s.redirect&&(window.location=s.redirect),s.error&&t(s.error),a&&a(s)},hideError:()=>{document.getElementById("errorMessage").classList.add("hidden")}}}},t={};function r(a){var n=t[a];if(void 0!==n)return n.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,r),s.exports}(()=>{const e=r(603),t=[{name:"Login",href:"/login",id:"loginButton"},{name:"Sign Up",href:"/signup",id:"signupButton"}],a=t=>{t.preventDefault(),e.hideError();const r=t.target.querySelector("#user").value,a=t.target.querySelector("#pass").value,n=t.target.querySelector("#_csrf").value;return r&&a?(e.sendPost(t.target.action,{username:r,pass:a,_csrf:n}),!1):(e.handleError("Username or password is empty!"),!1)},n=t=>{t.preventDefault(),e.hideError();const r=t.target.querySelector("#user").value,a=t.target.querySelector("#pass").value,n=t.target.querySelector("#pass2").value,s=t.target.querySelector("#_csrf").value;return r&&a&&n?a!==n?(e.handleError("Passwords do not match!"),!1):(e.sendPost(t.target.action,{username:r,pass:a,pass2:n,_csrf:s}),!1):(e.handleError("All fields are required"),!1)},s=e=>{const t=e.links.map(((e,t)=>React.createElement("div",{key:t,className:"navlink"},React.createElement("a",{id:e.id,href:e.href},e.name))));return React.createElement("nav",{id:"navbar"},t)},c=e=>React.createElement("form",{id:"loginForm",name:"loginForm",onSubmit:a,action:"/login",method:"POST",className:"mainForm"},React.createElement("label",{htmlFor:"username"},"Username: "),React.createElement("input",{id:"user",type:"text",name:"username",placeholder:"username"}),React.createElement("label",{htmlFor:"pass"},"Password: "),React.createElement("input",{id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Sign in"})),o=e=>React.createElement("form",{id:"signupForm",name:"signupForm",onSubmit:n,action:"/signup",method:"POST",className:"mainForm"},React.createElement("label",{htmlFor:"username"},"Username: "),React.createElement("input",{id:"user",type:"text",name:"username",placeholder:"username"}),React.createElement("label",{htmlFor:"pass"},"Password: "),React.createElement("input",{id:"pass",type:"password",name:"pass",placeholder:"password"}),React.createElement("label",{htmlFor:"pass2"},"Password: "),React.createElement("input",{id:"pass2",type:"password",name:"pass2",placeholder:"retype password"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Sign in"}));window.onload=async()=>{const e=await fetch("/getToken"),r=await e.json();ReactDOM.render(React.createElement(s,{links:t}),document.getElementById("nav"));const a=document.getElementById("loginButton"),n=document.getElementById("signupButton");a.addEventListener("click",(e=>(e.preventDefault(),ReactDOM.render(React.createElement(c,{csrf:r.csrfToken}),document.getElementById("content")),!1))),n.addEventListener("click",(e=>(e.preventDefault(),ReactDOM.render(React.createElement(o,{csrf:r.csrfToken}),document.getElementById("content")),!1))),ReactDOM.render(React.createElement(c,{csrf:r.csrfToken}),document.getElementById("content"))}})()})();